name: CI

on: [push]

jobs:
  check-broken-md-links:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache unpublished "broken-md-links" dependency
        uses: actions/cache@v1.1.2
        with:
          path: ~/.cargo/bin
          key: broken-md-links-tool
      - name: Get "broken-md-links" tool
        run: |
          if ! type broken-md-links > /dev/null; then
            cargo install --git https://github.com/ClementNerma/broken-md-links.git
          fi
      - name: Look for broken MD links
        run: broken-md-links ${GITHUB_WORKSPACE} --recursive

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v1.1.2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1.1.2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1.1.2
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Run Cargo tests
        run: |
          cargo test -- --test-threads=1 --nocapture

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v1.1.2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1.1.2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1.1.2
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Check linting
        run: |
          cargo clippy
